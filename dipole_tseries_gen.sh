#!/bin/bash
# THIS SCRIPT EXTRACTS THE TIME-EVOLVING 
# DIPOLE MOMENT DATA FROM REAL-TIME DYNAMICS 
# LOG FILES GENERATED BY GAUSSIAN (GDV.I06P)
#
# WRITTEN BY: JOSEPH J. RADLER
# WRITTEN:  5/2/2017
# MODIFIED: 5/3/2017
#

# DEFINE THE CONDITION TO TEST
args="$#"

# CONDITIONAL TO PARSE THE NUMBER OF ARGUMENTS
# AND EXTRACT THE RAW DATA FROM THE .LOG FILE

if [ "$args" == "1" ]; then
	# GRAB THE DESIRED RAW DIPOLE DATA
	`grep -A 2 'Time =' $1 > temp.txt`
elif [ "$args" -gt "1" ]; then	
	while [ "$#" -gt "0" ]; do
		# CREATE TWO NEW TEMP FILES
		`touch temp.txt`
		`touch greptemp.txt`
		# GRAB THE DESIRED RAW DIPOLE DATA
		`grep -A 2 'Time =' $1 > greptemp.txt`;
		cat greptemp.txt >> temp.txt;
		# TRASH COLLECTION
		rm greptemp.txt;
		# SHIFT THE ARG REFERENCE DOWN ONE
		shift
	done
else echo "INVALID ARGUMENTS"
fi

# GENERATE THE TEMP FILES TO ISOLATE THE TIME AND 
# DIPOLE COMPONENT DATA

`grep -o '.\{0,12\}fs.\{0,0\}' temp.txt > t_temp.txt`;
`grep -o '.\{0,0\}X=.\{0,16\}' temp.txt > x_temp.txt`;
`grep -o '.\{0,0\}Y=.\{0,16\}' temp.txt > y_temp.txt`;
`grep -o '.\{0,0\}Z=.\{0,16\}' temp.txt > z_temp.txt`;
`grep -o '.\{0,0\}Tot=.\{0,16\}' temp.txt > tot_temp.txt`;

# EXTRACT ONLY THE COORDINATES TO TIME TO OBTAIN TIME SERIES

`awk '{print $1}' t_temp.txt > t_only_temp.txt`;
`awk '{print $2}' x_temp.txt > x_only_temp.txt`;
`awk '{print $2}' y_temp.txt > y_only_temp.txt`;
`awk '{print $2}' z_temp.txt > z_only_temp.txt`;
`awk '{print $2}' tot_temp.txt > tot_only_temp.txt`;

# TRASH COLLECTION

`rm temp.txt`;

# PASTE TIME AND COORDINATES TO CREATE TIME SERIES

`paste t_only_temp.txt x_only_temp.txt > x_series.txt`;
`paste t_only_temp.txt y_only_temp.txt > y_series.txt`;
`paste t_only_temp.txt z_only_temp.txt > z_series.txt`;
`paste t_only_temp.txt tot_only_temp.txt > tot_series.txt`;

# TRASH COLLECTION PROCESS

`rm *_temp.txt`;

exit 0 
